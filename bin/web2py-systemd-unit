#!/bin/sh

set -e

if [ "${DEBUG}" = true ]; then
  set -x
fi

VERSION=2.21.1

DEF_PORT=80
DEF_VOLUME_HOME=/opt/docker
DEF_NAME=web2py
DEF_INSTALL_PROJECT=0
DEF_PROJECT_GIT_REPO=
DEF_PROJECT_APPCONFIG_INI_PATH=
DEF_PROJECT_GIT_TAG=

DEF_WEB2PY_ADMIN=
DEF_WEB2PY_MIN=true

PORT=${PORT:-$DEF_PORT}
VOLUME_HOME=${VOLUME_HOME:-$DEF_VOLUME_HOME}
NAME=${NAME:-$DEF_NAME}

INSTALL_PROJECT=${INSTALL_PROJECT:-$DEF_INSTALL_PROJECT}
PROJECT_GIT_REPO=${PROJECT_GIT_REPO:-$DEF_PROJECT_GIT_REPO}
PROJECT_APPCONFIG_INI_PATH=${PROJECT_APPCONFIG_INI_PATH:-$DEF_PROJECT_APPCONFIG_INI_PATH}
PROJECT_GIT_TAG=${PROJECT_GIT_TAG:-$DEF_PROJECT_GIT_TAG}

WEB2PY_ADMIN=${WEB2PY_ADMIN:-$DEF_WEB2PY_ADMIN}
WEB2PY_MIN=${WEB2PY_MIN:-$DEF_WEB2PY_MIN}

IMAGE_NAME=docker-nginx-web2py
if [ "${WEB2PY_MIN}" = true ]; then
  IMAGE_NAME=docker-nginx-web2py-min
fi

if [ -z ${PORT} ]; then
  PORT_LINE=""
else 
  PORT_LINE="-p ${PORT}:80 "
fi

/bin/cat <<-EOF
[Unit]
Description=Web2py Framework

After=docker.service

[Service]
TimeoutStartSec=0

ExecStartPre=-/bin/mkdir -p ${VOLUME_HOME}/${NAME}/applications
ExecStartPre=-/bin/mkdir -p ${VOLUME_HOME}/${NAME}/log
ExecStartPre=-/usr/bin/docker stop ${NAME}
ExecStartPre=-/usr/bin/docker rm ${NAME}
ExecStartPre=-/usr/bin/docker pull madharjan/${IMAGE_NAME}:${VERSION}

ExecStart=/usr/bin/docker run \\
  ${LINK_LINE}-e INSTALL_PROJECT=${INSTALL_PROJECT} \\
  -e PROJECT_GIT_REPO=${PROJECT_GIT_REPO} \\
  -e PROJECT_GIT_TAG=${PROJECT_GIT_TAG} \\
  -e WEB2PY_ADMIN=${WEB2PY_ADMIN} \\
  -v /opt/docker/${NAME}/applications:/opt/web2py/applications \\
  -v /opt/docker/${NAME}/log:/var/log/nginx \\
  --name ${NAME} \\
  madharjan/${IMAGE_NAME}:${VERSION}

ExecStop=/usr/bin/docker stop -t 2 ${NAME}

[Install]
WantedBy=multi-user.target
EOF
